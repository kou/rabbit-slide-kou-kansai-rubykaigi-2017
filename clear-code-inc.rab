= 株式会社クリアコード

: author
   須藤功平
: content-source
   関西Ruby会議2017
: date
   2017-05-27
: allotted-time
   60m
: theme
   clear-code

= テーマ

コミュニティー\n
と\n
ビジネス

= 題材

  # image
  # src = images/clear-code.svg
  # relative_width = 100
  # reflect_ratio = 0.5

== スライドプロパティー

: enable-title-on-image
   false

= クリアコード

  * 設立11年目の会社
  * 業務：受託開発と技術サポート
  * 小さな会社：9人(('note:（募集してはいる）'))

= 大事にしていること

(('tag:center'))
(('tag:large'))
フリーソフトウェアの推進

(('tag:center'))
と

(('tag:center'))
(('tag:large'))
稼ぐこと

(('tag:center'))
の

(('tag:center'))
(('tag:x-large'))
両立

= 推進するだけだとダメ

  * 稼がないと継続できない
  * そうなると推進し続けられない

= 稼ぐだけだとダメ

  * クリアコードをやっている\n
    意味がない
  * 他の開発会社でよい

= 両立の実現に向けて

  * クリアコードが活用するもの
    * フリーソフトウェア開発で学んだ事\n
      (('note:理念：https://www.clear-code.com/philosophy/'))
  * コミュニティーで学んだことを\n
    ビジネスに活かしている\n
    (('note:関西Ruby会議2017のテーマにあっていそう！'))

= 学んだこと1

(('tag:center'))
問題を見つけたらupstreamで直す

  * 使用ライブラリーに問題発見！\n
    (('note:（たとえばRailsとかActiveなんとかとか）'))\n
    あなたならどうする！？

    (1) 手元で回避
    (2) 別のライブラリーを探す
    (3) そのライブラリーを直す

= クリアコードのスタイル

  * そのライブラリーを直す
    * 自分のコードをメンテしやすくなる
      * 回避コードを手元でメンテしなくてよい
      * そのライブラリーを使っているコードが\n
        複数あったら全部で回避しないといけない…
    * 他の人も困らなくなる

= フリーソフトウェア開発の世界

  * そのライブラリーを直すのは\n
    当たり前
    * フリーソフトウェアが大事にしていることの1つは「直せること」！
  * クリアコードはここで学んだ\n
    ことを実践しているだけ

= クリアコードの実践

  * コミュニティーの知見を\n
    ビジネスで活用
    * 「メンテしやすい」は割に合う
  * ビジネスの知見を\n
    コミュニティーに\n
    フィードバック
    * ユースケースを元に改良

= クリアコードでの実例

  * Rubyにメモリーリークあり
    * Ruby製のデーモンで問題に
    * 調査→パッチ作成→Ruby本体で修正
    * 定期的に再起動という回避策もあるだろうけど、本体で修正

(('note:これで社員がコミット権をもらっていた'))

(('note:技術的な詳細：デバッグ力: よく知らないプログラムの直し方'))\n
(('note:http://www.clear-code.com/blog/2011/12/6.html'))

= 学んだこと2

(('tag:center'))
開発を続けられるコードを書く

  * ファーストリリース完了！\n
    その後は？
    (1) 納品して終わり
    (2) 運用チームに引き渡して終わり
    (3) 継続的に開発

= クリアコードのスタイル

  * 継続的に開発
    * 長期的に一緒にやれる仕事を優先
    * フリーソフトウェア開発では\n
      リリースを重ねながら改良が普通
    * ビジネス的にもうれしい：安定収入

= フリーソフトウェア開発の世界

  * 継続的に開発は普通
    * ユーザーのフィードバックも参考に\n
      よりよいソフトウェアを開発
  * クリアコードはここで学んだ\n
    ことを実践しているだけ
