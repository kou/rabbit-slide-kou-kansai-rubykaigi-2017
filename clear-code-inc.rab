= 株式会社クリアコード

: author
   須藤功平
: content-source
   関西Ruby会議2017
: date
   2017-05-27
: allotted-time
   60m
: theme
   clear-code

= 内容

  * ストーリーはあまりない
  * テーマに関係する話を集めた
  * 聞く人それぞれへの期待
    * 参考になる何かが見つかるといいな

= テーマ

コミュニティー\n
と\n
ビジネス

= 題材

  # image
  # src = images/clear-code.svg
  # relative_width = 100
  # reflect_ratio = 0.5

== スライドプロパティー

: enable-title-on-image
   false

= クリアコード

  * 設立11年目の会社
  * 業務：受託開発と技術サポート
  * 小さな会社：9人(('note:（募集してはいる）'))

= 大事にしていること

(('tag:center'))
(('tag:large'))
フリーソフトウェアの推進

(('tag:center'))
と

(('tag:center'))
(('tag:large'))
稼ぐこと

(('tag:center'))
の

(('tag:center'))
(('tag:x-large'))
両立

= 推進するだけだとダメ

  * 稼がないと継続できない
  * そうなると推進し続けられない

= 稼ぐだけだとダメ

  * クリアコードをやっている\n
    意味がない
  * 他の開発会社でよい

= 両立の実現に向けて

  * クリアコードが活用するもの
    * フリーソフトウェア開発で学んだ事\n
      (('note:理念：https://www.clear-code.com/philosophy/'))
  * コミュニティーで学んだことを\n
    ビジネスに活かしている\n
    (('note:関西Ruby会議2017のテーマにあっていそう！'))

= 学んだこと1

問題は\n
upstreamで直す

= 考えてみよう

(('tag:center'))
(('tag:margin-bottom * 2'))
使用ライブラリーに問題発見！\n
(('note:（たとえばRailsとかActiveなんとかとか）'))\n
あなたならどうする！？

  (1) 手元で回避
  (2) 別のライブラリーを探す
  (3) そのライブラリーを直す

= クリアコードのスタイル

(('tag:center'))
3. そのライブラリーを直す\n
(('note:（そうじゃないときもあるけど基本的にはそう）'))

  * 自コードのメンテ性アップ
    * 回避コードの独自メンテが不要
    * 回避コードの共有が不要\n
      (('note:（使っているプロジェクト全部で回避が必要）'))
  * 他の人も困らなくなる

= フリーソフトウェア開発の世界

  * そのライブラリーを直すのは\n
    当たり前
    * フリーソフトウェアが大事にしていることの1つは「直せること」！
  * クリアコードはここで学んだ\n
    ことを実践しているだけ

= コミュニティーとビジネス

  * ビジネスでの知見を\n
    コミュニティーへ
    * ユースケースを元に改良・修正
  * なぜやるの？
    * クリアコードのポリシーだから
    * 「メンテしやすい」は普通に\n
      ビジネス的に割に合う

= クリアコードでの実例

(('tag:center'))
Rubyにメモリーリークあり

  * Ruby製のデーモンで問題に
  * 調査→パッチ作成→Rubyを修正
  * 定期的に再起動という回避策もあるだろうけど、本家で修正

(('note:これで社員がコミット権をもらっていた'))

(('note:技術的な詳細：デバッグ力: よく知らないプログラムの直し方'))\n
(('note:http://www.clear-code.com/blog/2011/12/6.html'))

= 学んだこと2

開発を\n
続けられる\n
コードを書く

= 考えてみよう

(('tag:center'))
(('tag:margin-bottom * 2'))
ファーストリリース完了！\n
その後は？

  (1) 納品して終わり
  (2) 運用チームにバトンタッチ
  (3) 継続的に開発

= クリアコードのスタイル

(('tag:center'))
(('tag:margin-bottom * 2'))
3. 継続的に開発

  * 長期間一緒にやれる仕事を優先
  * フリーソフトウェア開発では\n
    リリースを重ねつつ改良が普通
  * ビジネス的にもよい：安定収入

= フリーソフトウェア開発の世界

TODO

  * 継続的に開発は普通
    * ユーザーのフィードバックも参考に\n
      よりよいソフトウェアを開発
  * クリアコードはここで学んだ\n
    ことを実践しているだけ

= 学んだこと3

(('tag:center'))
相手が想像しなくてもわかるように説明する

= 学んだこと4

(('tag:center'))
楽しく開発する

= 学んだこと

  * ...

= 仕事

  * 受託開発
  * OSS開発支援

= 受託開発

  * 優先度
    * 成果をフリーソフトウェアにできる仕事
    * フリーソフトウェアを活用できる仕事
    * いずれ活用につながりそうな仕事

= OSS開発支援

  * お客さんのOSSの開発に参加
    * 例1：Fluentd関連
    * 例2：Groonga(('note:（今は自主的に開発）'))
  * お客さんのOSS開発を支援
    * 例：Speeeさん

= お客さんのOSSの開発に参加

ダイレクトに大事なことを両立

(('tag:margin-top * 2'))
クリアコードの大事なこと：

  * フリーソフトウェアの推進
  * 稼ぐこと

= どうして仕事になるか

  * OSSで稼いでいる企業が増えた
  * ちゃんとOSSを開発できることを\n
    OSSを開発することで示せている
    * OSSの開発が営業活動になっている
    * コミュニティー活動がビジネスへ

= お客さんのOSS開発を支援

ダイレクトに大事なことを両立

(('tag:margin-top * 2'))
クリアコードの大事なこと：

  * フリーソフトウェアの推進
  * 稼ぐこと

= どうして仕事になるか

  * OSSの活用が当たり前になった
  * OSSのエコシステムに参加する\n
    メリットが認知されつつある
  * 支援してくれそう感が出ている
    * OSSの開発や発表などが営業活動
    * コミュニティー活動がビジネスへ

= OSSのエコシステムに参加

どういうこと\n
だろう？

= OSSのエコシステムに参加

  # blockquote

  自分たちのソフトウェアと\n
  OSSを同じように扱う

  (('tag:right'))
  (('note:私の言葉での説明'))

= 同じように扱う

  * 問題があれば直す
  * 気になるところがあれば共有

(('wait'))
(('tag:center'))
いつも通りでいい！\n
OSSは身近だということを伝える

= 仕事の作り方

お客さんに\n
見つけてもらう

= お客さん探しを頑張らない

  * クリアコードは大衆受けすることをやっていない
  * マッチするお客さんは少ない
  * 少ないお客さんを探し回るパワーはない
    * そこに力を入れるよりも得意なことを伸ばしたい

= 諦めることは大事

  * クリアコードは小さな会社
  * すべてに全力投球はできない
  * なにを諦めるかを決断
    * なにかに力を入れるということは\n
      なにかを諦めるということでもある

= 決断

  * 社長職の面白いところでもあり難しいところでもある
  * 決断する基準があると楽しめる
  * クリアコードの基準
    * フリーソフトウェアの推進と
    * 稼ぐことの両立

= お客さん探しと稼ぐこと

  * 単に探すことをやめては稼げない
    * 探さないで稼げないか考える
  * 基本的にまずは両取りを狙う
    * さっきは諦めるっていったけどさー
    * 探すことは諦めるけど稼ぐことは諦めない

= 推進と稼ぐことの両取り

  * フリーソフトウェアの推進を頑張る
    * 開発・パッチ提供・レビュー
    * 情報公開：ブログ・発表
  * ↑を頑張ることで見つけてもらいやすくなる
    * 見つけてもらって仕事になると稼げる！
    * 両取り！

= 推進→見つけてもらった例

  * GStreamerの情報公開で問い合わせ→技術サポート→今は一緒に組み込みGeckoを開発
  * リーダブルコード解説者としていろいろお呼ばれ
  * Mozillaのバグトラッキングシステムでメールアドレスをみたので問い合わせた

= 推進→見つけてもらう

  * フリーソフトウェア推進を頑張ることが営業活動
    * 推進活動自体がやりたいことで、それが営業になる
  * 推進と稼ぐの両取りの一例

  * コミュニティー活動がビジネスにつながる例？

= 採用

  * 仕事と同じでマッチする人は少なそう
    * RailsでWebアプリ！とかゲーム開発！とかとは違う
    * 業務内容じゃなくてポリシーでマッチ

= 採用活動

  * フリーソフトウェアの推進
    * 見つけてもらう
    * 一緒に開発しながらよさそうな人を誘う
  * RubyKaigiにスポンサー
    * Rubyを応援したいという気持ちで始めた
    * 転職サイトとかは一切使っていない
